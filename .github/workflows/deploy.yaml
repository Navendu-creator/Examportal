
name: Deploy to EC2 Node.js CI/CD
on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        appname: ["frontend-react"]
        deploy-group: ["frontend-dg"]
        s3-bucket: ["frontends32"]
        s3-filename: ["frontends32-${{ github.sha }}"]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}


      - name: Generate unique Docker image tag
        id: version
        run: echo "::set-output name=tag::$(echo ${{ github.run_id }})"
    

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontendimage:${{ steps.version.outputs.tag }} .
          
      - name: Login to Docker Hub
        run: |
          echo "Docker Hub username: ${{ secrets.DOCKER_USERNAME }}"
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/frontendimage:${{ steps.version.outputs.tag }}

      - name: chmod
        run: chmod -R +x  scripts/*

      - name: AWS Deploy push
        run: |
          aws deploy push \
            --application-name ${{ matrix.appname }} \
            --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
            --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
            --source .

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ matrix.appname }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name ${{ matrix.deploy-group }} \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip
