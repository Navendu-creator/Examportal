name: Deploy to EC2 Node.js CI/CD

on:
  push:
    branches: ["main"]

  
jobs:
  build:
    runs-on: ubuntu-latest


    strategy:
      matrix:
        node-version: [16.x]
        appname: ["frontend-react"]
        deploy-group: ["frontend-dg"]
        s3-bucket: ["frontends32"]
        s3-filename: ["frontends32-${{ github.sha }}"]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/



    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}


      - name: Generate unique Docker image tag
        id: version
        run: echo "::set-output name=tag::$(echo ${{ github.run_id }})"

      - name: Build Docker image
        run: |
          cd frontend  # Change directory to frontend folder
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-stage:${{ steps.version.outputs.tag }} -f Dockerfile .

      - name: Login to Docker Hub
        run: |
          echo "Docker Hub username: ${{ secrets.DOCKER_USERNAME }}"
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-stage:${{ steps.version.outputs.tag }}
        
      - name: chmod
        run: chmod -R +x  scripts/*

      - name: SSH to Instance
        env:
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          echo "${{ secrets.SSH_PRIVATEKEY }}" > my-ssh-key.pem
          chmod 600 my-ssh-key.pem

          # Get the ID of the running container
       
            RUNNING_CONTAINER=$(ssh -o StrictHostKeyChecking=no -i my-ssh-key.pem $USER_NAME@${HOSTNAME} "sudo docker ps --filter 'name=frontend-staging' --format '{{.ID}}'")
 

      
          RUNNING_CONTAINER=$(ssh -o StrictHostKeyChecking=no -i my-ssh-key.pem $USER_NAME@${HOSTNAME} "sudo docker ps --filter \"name=frontend-staging\" --format \"{{.ID}}\"")

          ssh -o StrictHostKeyChecking=no -i my-ssh-key.pem $USER_NAME@${HOSTNAME} '
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-stage:${{ steps.version.outputs.tag }}
          UNIQUE_ID=$(date +%s)
          CONTAINER_NAME="frontend-staging-${UNIQUE_ID}"
          echo "Starting Docker container..."
          sudo docker run -d --name $CONTAINER_NAME -p 4000:3000  ${{ secrets.DOCKER_USERNAME }}/frontend-stage:${{ steps.version.outputs.tag }}
          echo "Docker container started......."
          sudo docker image prune -a --force
          '

    
